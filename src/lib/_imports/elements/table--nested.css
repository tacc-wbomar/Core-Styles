@supports selector(:has(table)) {
  /* To ensure matching row height of nested table and parent table */
  table:has(table) :is(td, th) { white-space: nowrap; }

  /* To move even row background to nested table only */
  table:has(table) tr:nth-child(even) :is(th, td) {
    background: var(--global-color-background--app);
  }
  td:has(table) tr:nth-child(even) :is(th, td) {
    background: var(--global-color-primary--x-light);
  }

  /* To align nested table cells with parent table cells */
  td:has(table) { padding: 0; }
}
@supports not selector(:has(table)) {
  /* To ensure matching row height of nested table and parent table */
  table.has-table :is(td, th) { white-space: nowrap; }

  /* To move even row background to nested table only */
  table.has-table tr:nth-child(even) :is(th, td) {
    background: var(--global-color-background--app);
  }
  td.has-table tr:nth-child(even) :is(th, td) {
    background: var(--global-color-primary--x-light);
  }

  /* To align nested table cells with parent table cells */
  td.has-table { padding: 0; }
}

/* FAQ: Re-colors border of all successive nested rows (to match parent row) */
thead + tbody tr:not(:first-of-type) tbody :is(td,th) {
  border-color: var(--global-color-primary--light);
}

table.nested-table {
  border-bottom: unset;
  border-left: var(--global-border-width--normal) solid var(--global-color-primary--light);
  border-right: var(--global-border-width--normal) solid var(--global-color-primary--light);
}

@media (max-width: 767px) {

  :--table--is-responsive.has-table {
    & td:nth-child(3):not(:is(table.nested-table *) > *):before {
      content: none;
    }

    & td:nth-child(3):not(:is(table.nested-table *) > *) {
      padding-left: unset;
      position: unset;

      display: flex;
      justify-content: center;
      border-bottom: unset;
    }

    & td:last-child:not(:is(table.nested-table *) > *) {
      padding-top: unset;
    }
  }

  :--table--is-responsive.nested-table {
    border: unset;

    & tr {
      border: var(--global-border-width--normal) solid var(--global-color-primary--dark);
    }

    & tr:nth-child(odd) :is(th, td) {
      background-color: rgba(var(--global-color-primary--light-rgb), 0.40)
    }
    & tr:nth-child(odd) :is(th, td):nth-child(even) {
      background-color: var(--global-color-primary--x-light);
    }

    & tr:nth-child(even) :is(th, td):nth-child(odd) {
      background-color: rgba( var(--global-color-primary--x-light-rgb), 0.50);
    }
    & tr:nth-child(even) > :is(th, td):nth-child(even) {
      background-color: var(--global-color-primary--xx-light);
    }

    & tr:not(:last-of-type) {
      border-bottom: unset;
    }
  }

  tr:not(:last-of-type) {
    border-bottom: var(--global-border-width--normal) solid var(--global-color-primary--dark);
  }

}