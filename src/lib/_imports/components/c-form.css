@import url("../components/c-button.css");
@import url("../components/c-message.css");
@import url('../tools/x-link.css');



/* Title & Description */

.c-form__desc {
  margin-block: 25px;
}



/* Help Text */

.c-form__help {
  font-size: var(--global-font-size--small);
  font-style: italic;
}
:not(
  ul, /* FAQ: Lists already have margin-bottom */
  label /* FAQ: Labels already have margin-bottom */
) + .c-form__help {
    margin-top: 0.3em; /* mimic Bootstrap _reboot.css label margin-bottom */
}
/* To prevent help text font-style from affecting any tags */
/* FAQ: Help text can contain inline elements like <samp> */
/* FAQ: Help text can be (ab)used to add headings between form fields */
.c-form__help > :not(details, a, samp, small) {
  font-style: initial;
}



/* Fields */
/* TODO: Make fieldset-child <div>s be opt-out automatic field-wrappers.
    0. [ ] Define `fieldset > div { @extend .c-form__field; }` ruleset.
    1. [ ] Create `.c-form--no-auto-wrappers`.
    2. [ ] Define `.c-form:not(.c-form--no-auto-wrappers) fieldset > div` rules.
*/

.c-form__field {
  margin-bottom: 2rem; /* mimic <p> `margin-bottom` */
}

.c-form__field:not(.has-type-check) {
  display: flex;
  flex-direction: column;
}
.c-form__field:not(.has-type-check) > .c-form__errors {
  order: 1; /* i.e. move to end */
}

.c-form__field.has-type-check {
  display: inline-grid;

  column-gap: 0.5em;
  align-items: center;
  grid-template-columns: min-content auto; /* shrink input, let label extend */
  grid-template-areas:
    'error _____'
    'input label'
    'notes notes';
}
.c-form__field.has-type-check .c-form__errors { grid-area: error; }
.c-form__field.has-type-check input           { grid-area: input; }
.c-form__field.has-type-check label           { grid-area: label; }
.c-form__field.has-type-check .c-form__help   { grid-area: notes; }
.c-form__field.has-type-check label {
  margin-bottom: 0; /* overwrite forms.css label */
}

.c-form__field > ul:where(:not(.c-form__errors)) label {
  display: flex;
  gap: 0.5em;
  align-items: center;
  font-weight: revert; /* undo html-elements.cms.css */
}
.c-form__field > ul:where(:not(.c-form__errors)) li:last-child label {
  margin-bottom: 0; /* overwrite forms.css label */
}

/* Field: Required, Asterisk, Important */

.c-form__field .c-form__star {
  margin-left: 0.5em;
}
.c-form__field.has-required .c-form__star {
  color: var(--global-color-danger--dark);
}
.c-form__field:not(.has-required) .c-form__star
/* NOTE: Manual markup ONLY; form plugin can't render non-required asterisk */ {
  color: var(--global-color-warning--dark);
}
/* To replace asterisk character with text */
.c-form__field .c-form__star {
  width: 0;
  display: inline-block;
  visibility: hidden;
  line-height: 0;
}
.c-form__field .c-form__star::after {
  visibility: visible;
  line-height: initial;
}
.c-form__field.has-required .c-form__star::after {
  content: '(required)';
}
.c-form__field:not(.has-required) .c-form__star::after
/* NOTE: Manual markup ONLY; form plugin can't render non-required asterisk */ {
  content: '(important)';
}



/* Errors */

.c-form > .c-form__error,
.c-form > .c-form__errors {
  margin-block: 20px;
}
.c-form__field .c-form__error,
.c-form__field .c-form__errors {
  margin-top: 20px;
  margin-bottom: 0; /* overrides html-elements.css ul margin-bottom */
}

ul.c-form__errors {
  list-style: none;
  padding-inline: 0;
}

.c-form > .c-form__error,
.c-form > .c-form__errors {
  @extend .c-message;
  @extend .c-message--type-error;
  @extend .c-message--scope-section;
  @extend .c-message--scope-section.c-message--type-error;
}
.c-form__field .c-form__error,
.c-form__field .c-form__errors li {
  @extend .c-message;
  @extend .c-message--type-error;
  @extend .c-message--scope-inline;
}



/* Lists */

.c-form__field > ul:where(:not(.c-form__errors)) {
  list-style: none;

  padding-left: 0;
}



/* Buttons */

.c-form__buttons {
  margin-top: 35px;
}

/* To style obvious buttons that neglect class */
.c-form__buttons button[type="submit"] {
  @extend .c-button;
  @extend .c-button--primary;
}

.c-form__button {
  @extend .c-button;
}
.c-form__button[type="submit"] {
  @extend .c-button--primary;
}
.c-form__button:where(:not([type="submit"], [type="reset"])) {
  @extend .c-button--secondary;
}
.c-form__button[type="reset"] {
  @extend .c-button--tertiary;
}

/* TODO: Test whether this fixes size difference between demo and cms */
/*
::file-selector-button {
  @extend .c-button;
  @extend .c-button--secondary;
}
*/
